/*
 * MarketMakerView.java
 */

package marketmaker;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JFileChooser;
import java.io.File;
import java.io.FileReader;

import com.prc.tt.algo.MarketMaker;


/**
 * The application's main frame.
 */
public class MarketMakerView extends FrameView {
MarketMaker mm;
boolean STARTED=false;
String conffile="C:/work/TT/conf/subscribe/tt.xml";
String secid;
String algoname;

    public MarketMakerView(SingleFrameApplication app) {
        super(app);

        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });


        algoname= AlgoNameTextField.getText();
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = MarketMakerApp.getApplication().getMainFrame();
            aboutBox = new MarketMakerAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        MarketMakerApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        StartBtn = new javax.swing.JButton();
        CxlAllToggleBtn = new javax.swing.JToggleButton();
        MMToggleBtn = new javax.swing.JToggleButton();
        BidQtyUpBtn = new javax.swing.JButton();
        BidQtyDnBtn = new javax.swing.JButton();
        BidPriceUpBtn = new javax.swing.JButton();
        BidPriceDnBtn = new javax.swing.JButton();
        AskPriceUpBtn = new javax.swing.JButton();
        AskPriceDnBtn = new javax.swing.JButton();
        AskQtyUpBtn = new javax.swing.JButton();
        AskQtyDnBtn = new javax.swing.JButton();
        flatBtn = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        thresholdSpinner = new javax.swing.JSpinner();
        mktdistSpinner = new javax.swing.JSpinner();
        cvrdistSpinner = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        confBtn = new javax.swing.JButton();
        sizeSpinner = new javax.swing.JSpinner();
        SizeLabel = new javax.swing.JLabel();
        AlgoNameTextField = new javax.swing.JTextField();
        confFileLabel = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        buttonGroup1 = new javax.swing.ButtonGroup();
        fileChooser = new javax.swing.JFileChooser();

        mainPanel.setName("mainPanel"); // NOI18N

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(marketmaker.MarketMakerApp.class).getContext().getResourceMap(MarketMakerView.class);
        StartBtn.setText(resourceMap.getString("StartBtn.text")); // NOI18N
        StartBtn.setName("StartBtn"); // NOI18N
        StartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartBtnActionPerformed(evt);
            }
        });

        buttonGroup1.add(CxlAllToggleBtn);
        CxlAllToggleBtn.setText(resourceMap.getString("CxlAllToggleBtn.text")); // NOI18N
        CxlAllToggleBtn.setEnabled(false);
        CxlAllToggleBtn.setName("CxlAllToggleBtn"); // NOI18N
        CxlAllToggleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CxlAllToggleBtnActionPerformed(evt);
            }
        });

        buttonGroup1.add(MMToggleBtn);
        MMToggleBtn.setText(resourceMap.getString("MMToggleBtn.text")); // NOI18N
        MMToggleBtn.setEnabled(false);
        MMToggleBtn.setName("MMToggleBtn"); // NOI18N
        MMToggleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MMToggleBtnActionPerformed(evt);
            }
        });

        BidQtyUpBtn.setText(resourceMap.getString("BidQtyUpBtn.text")); // NOI18N
        BidQtyUpBtn.setName("BidQtyUpBtn"); // NOI18N
        BidQtyUpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BidQtyUpBtnActionPerformed(evt);
            }
        });

        BidQtyDnBtn.setText(resourceMap.getString("BidQtyDnBtn.text")); // NOI18N
        BidQtyDnBtn.setName("BidQtyDnBtn"); // NOI18N
        BidQtyDnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BidQtyDnBtnActionPerformed(evt);
            }
        });

        BidPriceUpBtn.setText(resourceMap.getString("BidPriceUpBtn.text")); // NOI18N
        BidPriceUpBtn.setName("BidPriceUpBtn"); // NOI18N
        BidPriceUpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BidPriceUpBtnActionPerformed(evt);
            }
        });

        BidPriceDnBtn.setText(resourceMap.getString("BidPriceDnBtn.text")); // NOI18N
        BidPriceDnBtn.setName("BidPriceDnBtn"); // NOI18N
        BidPriceDnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BidPriceDnBtnActionPerformed(evt);
            }
        });

        AskPriceUpBtn.setText(resourceMap.getString("AskPriceUpBtn.text")); // NOI18N
        AskPriceUpBtn.setName("AskPriceUpBtn"); // NOI18N
        AskPriceUpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AskPriceUpBtnActionPerformed(evt);
            }
        });

        AskPriceDnBtn.setText(resourceMap.getString("AskPriceDnBtn.text")); // NOI18N
        AskPriceDnBtn.setName("AskPriceDnBtn"); // NOI18N
        AskPriceDnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AskPriceDnBtnActionPerformed(evt);
            }
        });

        AskQtyUpBtn.setText(resourceMap.getString("AskQtyUpBtn.text")); // NOI18N
        AskQtyUpBtn.setName("AskQtyUpBtn"); // NOI18N
        AskQtyUpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AskQtyUpBtnActionPerformed(evt);
            }
        });

        AskQtyDnBtn.setText(resourceMap.getString("AskQtyDnBtn.text")); // NOI18N
        AskQtyDnBtn.setName("AskQtyDnBtn"); // NOI18N
        AskQtyDnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AskQtyDnBtnActionPerformed(evt);
            }
        });

        buttonGroup1.add(flatBtn);
        flatBtn.setText(resourceMap.getString("flatBtn.text")); // NOI18N
        flatBtn.setEnabled(false);
        flatBtn.setName("flatBtn"); // NOI18N
        flatBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flatBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(StartBtn)
                        .addGap(26, 26, 26)
                        .addComponent(CxlAllToggleBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MMToggleBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(flatBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(BidQtyDnBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BidPriceDnBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AskPriceDnBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AskQtyDnBtn))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(BidQtyUpBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BidPriceUpBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AskPriceUpBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AskQtyUpBtn)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StartBtn)
                    .addComponent(CxlAllToggleBtn)
                    .addComponent(MMToggleBtn)
                    .addComponent(flatBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BidQtyUpBtn)
                    .addComponent(BidPriceUpBtn)
                    .addComponent(AskPriceUpBtn)
                    .addComponent(AskQtyUpBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BidQtyDnBtn)
                    .addComponent(BidPriceDnBtn)
                    .addComponent(AskPriceDnBtn)
                    .addComponent(AskQtyDnBtn))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N

        thresholdSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(10), Integer.valueOf(0), null, Integer.valueOf(1)));
        thresholdSpinner.setName("thresholdSpinner"); // NOI18N
        thresholdSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                thresholdSpinnerStateChanged(evt);
            }
        });

        mktdistSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(3), Integer.valueOf(0), null, Integer.valueOf(1)));
        mktdistSpinner.setName("mktdistSpinner"); // NOI18N
        mktdistSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                mktdistSpinnerStateChanged(evt);
            }
        });

        cvrdistSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(4), Integer.valueOf(0), null, Integer.valueOf(1)));
        cvrdistSpinner.setName("cvrdistSpinner"); // NOI18N
        cvrdistSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cvrdistSpinnerStateChanged(evt);
            }
        });

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        confBtn.setText(resourceMap.getString("confBtn.text")); // NOI18N
        confBtn.setName("confBtn"); // NOI18N
        confBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confBtnActionPerformed(evt);
            }
        });

        sizeSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));
        sizeSpinner.setName("sizeSpinner"); // NOI18N
        sizeSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sizeSpinnerStateChanged(evt);
            }
        });

        SizeLabel.setText(resourceMap.getString("SizeLabel.text")); // NOI18N
        SizeLabel.setName("SizeLabel"); // NOI18N

        AlgoNameTextField.setText(resourceMap.getString("AlgoNameTextField.text")); // NOI18N
        AlgoNameTextField.setName("AlgoNameTextField"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(confBtn)
                    .addComponent(AlgoNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(thresholdSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(SizeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mktdistSpinner, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cvrdistSpinner, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sizeSpinner, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(thresholdSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(confBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mktdistSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cvrdistSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SizeLabel)
                    .addComponent(AlgoNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        confFileLabel.setText(resourceMap.getString("confFileLabel.text")); // NOI18N
        confFileLabel.setName("confFileLabel"); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(confFileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addComponent(confFileLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(marketmaker.MarketMakerApp.class).getContext().getActionMap(MarketMakerView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 223, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        fileChooser.setCurrentDirectory(new java.io.File("C:\\work\\TT\\conf\\subscribe"));
        fileChooser.setDialogTitle(resourceMap.getString("fileChooser.dialogTitle")); // NOI18N
        fileChooser.setName("fileChooser"); // NOI18N
        fileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChooserActionPerformed(evt);
            }
        });

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void StartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartBtnActionPerformed
        mm = new MarketMaker();
        mm.setCoverdist( (Integer)cvrdistSpinner.getValue());
        mm.setMktdist( (Integer)mktdistSpinner.getValue());
        mm.setThreshold( (Integer)thresholdSpinner.getValue() );
        mm.setSize(  (Integer)sizeSpinner.getValue() );
        
        algoname= AlgoNameTextField.getText();
        AlgoNameTextField.setEnabled(false);
        mm.start(algoname,conffile);
        
        secid = mm.getSecurityID();

        StartBtn.setEnabled(false);
        /*
        cvrdistSpinner.setEnabled(false);
        mktdistSpinner.setEnabled(false);
        thresholdSpinner.setEnabled(false);
        sizeSpinner.setEnabled(false);
            */
        confBtn.setEnabled(false);
        flatBtn.setEnabled(true);
        MMToggleBtn.setEnabled(true);
        CxlAllToggleBtn.setEnabled(true);
        MMToggleBtn.setSelected(true);
        STARTED=true;
    }//GEN-LAST:event_StartBtnActionPerformed

    private void CxlAllToggleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CxlAllToggleBtnActionPerformed
        mm.cxlAll();
        sizeSpinner.setEnabled(true);
        cvrdistSpinner.setEnabled(true);
        mktdistSpinner.setEnabled(true);
        thresholdSpinner.setEnabled(true);

    }//GEN-LAST:event_CxlAllToggleBtnActionPerformed

    private void MMToggleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MMToggleBtnActionPerformed
        mm.setCoverdist( (Integer)cvrdistSpinner.getValue());
        mm.setMktdist( (Integer)mktdistSpinner.getValue());
        mm.setThreshold( (Integer)thresholdSpinner.getValue() );
        mm.setSize(  (Integer)sizeSpinner.getValue() );
        mm.makemarkets();
    }//GEN-LAST:event_MMToggleBtnActionPerformed

    private void BidPriceDnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BidPriceDnBtnActionPerformed
        mm.shiftBidsPrice(secid,false);
    }//GEN-LAST:event_BidPriceDnBtnActionPerformed

    private void BidPriceUpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BidPriceUpBtnActionPerformed
      mm.shiftBidsPrice(secid,true);
    }//GEN-LAST:event_BidPriceUpBtnActionPerformed

    private void AskPriceDnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AskPriceDnBtnActionPerformed
mm.shiftOffersPrice(secid,false);
    }//GEN-LAST:event_AskPriceDnBtnActionPerformed

    private void AskPriceUpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AskPriceUpBtnActionPerformed
    mm.shiftOffersPrice(secid,true);
    }//GEN-LAST:event_AskPriceUpBtnActionPerformed

    private void BidQtyDnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BidQtyDnBtnActionPerformed
        mm.changeBidsQty(secid, false);
    }//GEN-LAST:event_BidQtyDnBtnActionPerformed

    private void BidQtyUpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BidQtyUpBtnActionPerformed
mm.changeBidsQty(secid, true);
    }//GEN-LAST:event_BidQtyUpBtnActionPerformed

    private void AskQtyUpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AskQtyUpBtnActionPerformed
mm.changeOffersQty(secid, true);
    }//GEN-LAST:event_AskQtyUpBtnActionPerformed

    private void AskQtyDnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AskQtyDnBtnActionPerformed
mm.changeOffersQty(secid,false);
    }//GEN-LAST:event_AskQtyDnBtnActionPerformed

    private void fileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileChooserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileChooserActionPerformed

    private void confBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confBtnActionPerformed
 int returnVal = fileChooser.showOpenDialog(this.getFrame());
    if (returnVal == JFileChooser.APPROVE_OPTION) {
        File file = fileChooser.getSelectedFile();
        conffile = file.getAbsolutePath();
        confFileLabel.setText(conffile);
        }
    }//GEN-LAST:event_confBtnActionPerformed

    private void sizeSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sizeSpinnerStateChanged
        if (STARTED) mm.setSize(  (Integer)sizeSpinner.getValue() );
    }//GEN-LAST:event_sizeSpinnerStateChanged

    private void cvrdistSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cvrdistSpinnerStateChanged
 if (STARTED) mm.setCoverdist( (Integer)cvrdistSpinner.getValue());
        
    }//GEN-LAST:event_cvrdistSpinnerStateChanged

    private void mktdistSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_mktdistSpinnerStateChanged
         if (STARTED) mm.setMktdist( (Integer)mktdistSpinner.getValue());

    }//GEN-LAST:event_mktdistSpinnerStateChanged

    private void thresholdSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_thresholdSpinnerStateChanged
if (STARTED) mm.setThreshold( (Integer)thresholdSpinner.getValue() );
    }//GEN-LAST:event_thresholdSpinnerStateChanged

    private void flatBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flatBtnActionPerformed
mm.flatposition(secid);
    }//GEN-LAST:event_flatBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AlgoNameTextField;
    private javax.swing.JButton AskPriceDnBtn;
    private javax.swing.JButton AskPriceUpBtn;
    private javax.swing.JButton AskQtyDnBtn;
    private javax.swing.JButton AskQtyUpBtn;
    private javax.swing.JButton BidPriceDnBtn;
    private javax.swing.JButton BidPriceUpBtn;
    private javax.swing.JButton BidQtyDnBtn;
    private javax.swing.JButton BidQtyUpBtn;
    private javax.swing.JToggleButton CxlAllToggleBtn;
    private javax.swing.JToggleButton MMToggleBtn;
    private javax.swing.JLabel SizeLabel;
    private javax.swing.JButton StartBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton confBtn;
    private javax.swing.JLabel confFileLabel;
    private javax.swing.JSpinner cvrdistSpinner;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JToggleButton flatBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JSpinner mktdistSpinner;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JSpinner sizeSpinner;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JSpinner thresholdSpinner;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}
